---
import Layout from '../layouts/Layout.astro';
import StackyIntro from '../components/stacky-intro.astro';
---

<Layout
  meta={{ path: '/about-us' }}
  header={{
    show: true,
    links: []
  }}
  footer={{ show: true }}
>
  <main>
    <StackyIntro />
  </main>
</Layout>

<style>
  main {
    margin-top: calc(var(--spacing) * 27);
    margin-bottom: calc(var(--spacing) * 32);
    padding-inline: calc(var(--spacing) * 6);

    @media (min-width: 40rem) {
      margin-top: calc(var(--spacing) * 20);
      padding-inline: calc(var(--spacing) * 10);
    }

    @media (min-width: 60rem) {
      /* Adjust the margin to the footer when the image moves to the side. */
      margin-bottom: calc(var(--spacing) * 46);
    }

    display: flex;
    flex-direction: column;
    align-items: center;
  }
</style>

<script is:inline>
  function distance(a, b) {
    return Math.sqrt(
      Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2)
    );
  }

  function angle(a, b) {
    return Math.atan2(p2.y - p1.y, p2.x - p1.x);
  }

  class Eye {
    #iris;

    constructor(side) {
      const eye = document.querySelector(`.stacky .eye.${side}`);

      const socket = eye.querySelector('.socket');
      const center = {
        x: Number(socket.getAttribute('x')) + (Number(socket.getAttribute('width')) / 2),
        y: Number(socket.getAttribute('y')) + Number(socket.getAttribute('height')) / 2,
      };
      console.log(center);

      this.#iris = eye.querySelector('.iris');
      const irisPosition = {
        x: Number(this.#iris.getAttribute('cx')),
        y: Number(this.#iris.getAttribute('cy'))
      }
      console.log({ irisPosition })

      const radius = distance(center, irisPosition);
      console.log({ radius });

      this.set(center);
    }

    set({ x, y })  {
      this.#iris.setAttribute('cx', x);
      this.#iris.setAttribute('cy', y);
    }

    target({ x, y }) {
      // TODO: Calculate the angle.
    }
  }

  class Eyes {
    #left;
    #right;

    constructor() {
      this.#left = new Eye('left');
      this.#right = new Eye('right');
    }

    target(x, y) {
      this.#left.target(x, y);
    }
  }

  (() => {
    const eyes = new Eyes();

    document.addEventListener('mousemove', (e) => {
      eyes.target(e.x, e.y);
    });

    console.log('done');
  })();
</script>
