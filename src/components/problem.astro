---
export type Props = {
  ingress: string;
  stat: { value: string; body: string };
  fancyFont: string;
  source: { href: string; text: string };
};

const { ingress, stat, source, fancyFont } = Astro.props;
---

<div class="problem">
  <h2 class="title">
    <slot name="title" />
  </h2>
  <p class="ingress">{ingress}</p>
  <div class="line"></div>
  <div class="stat">
    <p class="fancy value">{stat.value}</p>
    <p class="body">{stat.body}</p>
  </div>
  <a class="source" href={source.href} rel="noopener noreferrer"
    >{source.text}</a
  >
</div>

<style define:vars={{ 'fancy-font': fancyFont }}>
  .problem {
    height: fit-content;
    padding: calc(var(--spacing) * 8);
    border-radius: var(--radius-3xl);
    background-color: var(--color-base-accent);

    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing) * 6);

    .fancy {
      font-weight: var(--font-weight-medium);
      font-family: var(--fancy-font), Geist, system-ui;
    }

    .title {
      margin: 0;
      font-weight: var(--font-weight-extrabold);
      font-size: var(--text-5xl-font-size);
      line-height: var(--text-5xl-line-height);
      text-wrap: pretty;
    }

    .ingress {
      margin: 0;
      color: var(--color-base-muted-foreground);
    }

    .line {
      padding: 0;
      height: 0;
      border-bottom: 1px solid var(--color-base-border);
    }

    .stat {
      display: grid;
      gap: calc(var(--spacing) * 0.5);

      .value {
        margin: 0;
        font-size: var(--text-8xl-font-size);
        line-height: var(--text-8xl-line-height);
      }

      .body {
        margin: 0;
        font-size: var(--text-sm-font-size);
        line-height: var(--text-sm-line-height);
        font-weight: var(--font-weight-medium);
      }
    }

    .source {
      width: fit-content;
      border-radius: var(--radius-md);
      padding-inline: calc(var(--spacing) * 2);
      padding-block: calc(var(--spacing) * 0.5);
      background-color: var(--color-base-primary);
      color: var(--color-base-primary-foreground);
      text-decoration: none;
      font-size: var(--text-xs-font-size);
      line-height: var(--text-xs-line-height);
      font-weight: var(--font-weight-semibold);

      &:hover {
        background:
          linear-gradient(
            0deg,
            var(--color-base-background-alpha-70) 0%,
            var(--color-base-background-alpha-70) 100%
          ),
          var(--color-base-primary, #0a0a0a);
      }
    }
  }
</style>
